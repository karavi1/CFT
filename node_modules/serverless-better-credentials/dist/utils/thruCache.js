"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const log_1 = require("@serverless/utils/log");
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
async function thruCache(cachePath, isValidFn, refreshFn) {
    try {
        const cached = fs_1.default.readFileSync(cachePath, 'utf-8');
        const json = JSON.parse(cached);
        if (isValidFn(json)) {
            log_1.log.verbose(`serverless-better-credentials: sso cache-hit ${cachePath}`);
            return json;
        }
    }
    catch (_) {
        // non-existent or invalid cache; refresh is expected to fix.
    }
    log_1.log.verbose(`serverless-better-credentials: sso cache-miss: ${cachePath}`);
    const refreshed = await refreshFn();
    if (!isValidFn(refreshed)) {
        throw new Error('Cache invalid after refresh');
    }
    if (!fs_1.default.existsSync(cachePath))
        fs_1.default.mkdirSync(path_1.default.dirname(cachePath), { recursive: true });
    fs_1.default.writeFileSync(cachePath, JSON.stringify(refreshed), 'utf-8');
    return refreshed;
}
exports.default = thruCache;
//# sourceMappingURL=thruCache.js.map